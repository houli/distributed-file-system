* Directory Service
** Overview
There are 4 main features that the directory service set out to support.
Firstly, and most importantly it would need to be able to give a full listing of
all of the files currently registered in the system. Secondly, it needed to
provide a way to query the location of a specific file so that it could be read
from or written to. Thirdly, the directory service needed to provide a way to
indicate which node was to be given a write file request when a user attempts to
write to the file system. The final duty performed by the directory service is
to manage the registered and currently online file nodes. An endpoint is
provided for a file node to interact with and register that they have come
online.

** File Listing
The implementation of file listing is very straight forward. An authenticated
request to the ~ls~ endpoint results in the user receiving back a list of all
files that the system is currently aware are stored on the file service nodes.
This includes all the data from the database schema such as the node id where
that particular file is stored and the size of the stored file on disk.

** Querying File Locations
A ~whereis~ endpoint was provided to query the node of a particular file. The
user provides a path to a given file within the file system. The server responds
either with a ~404~ if it cannot find any reference to that path across any of
the file nodes or returns the node information and remote port of the node if
the file exists currently.

** Round-Robin Allocation of File Nodes
To reduce the impact of a file node going down or becoming unreachable due to a
network partition, a scheme was drawn up to ensure that roughly equal writes
occur across all file nodes that are registered. The method chosen was a
round-robin scheme based on the least recently used file node. If the file at
the path already has been saved and its primary node is accessible and online
then the writes will be directed to that primary node. Otherwise, a round-robin
node will be selected to store the new file being added to the system.

** File Node Registration
The directory service should maintain a record of all file nodes that have
successfully started up. For this reason, an endpoint is provided by the
directory service to register a file node. This registration information is
important in letting the directory service to issue responses to round-robin
requests to write files. It also allows the system to know what is currently up.
Multiple requests from the same file node can act as a sort of heartbeat that
the node is still up and ready to service file requests.
